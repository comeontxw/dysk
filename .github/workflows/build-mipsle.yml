name: Build for MIPSLE

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Clean up disk space
        run: |
          sudo apt-get clean
          sudo rm -rf /usr/local/lib/android /usr/share/dotnet /opt/ghc /swapfile
          df -h

      - name: Install Rust with nightly toolchain
        run: |
          curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y --default-toolchain nightly
          source $HOME/.cargo/env
          rustup target add mipsel-unknown-linux-musl
          rustc --version
          cargo --version

      - name: Configure cargo mirror
        run: |
          mkdir -p $HOME/.cargo
          cat > $HOME/.cargo/config.toml <<EOF
          [source.crates-io]
          replace-with = 'ustc'
          
          [source.ustc]
          registry = "sparse+https://mirrors.ustc.edu.cn/crates.io-index/"
          EOF

      - name: Install MIPSLE toolchain
        run: |
          sudo apt-get update
          sudo apt-get install -y gcc-mipsel-linux-gnu libc6-dev-mipsel-cross
          # 验证编译器安装
          mipsel-linux-gnu-gcc --version || true
          ls -l /usr/bin/mipsel-linux-gnu-*

      - name: Setup cross-compile environment
        run: |
          echo "CC_mipsel_unknown_linux_musl=mipsel-linux-gnu-gcc" >> $GITHUB_ENV
          echo "CARGO_TARGET_MIPSEL_UNKNOWN_LINUX_MUSL_LINKER=mipsel-linux-gnu-gcc" >> $GITHUB_ENV
          echo "CARGO_TARGET_MIPSEL_UNKNOWN_LINUX_MUSL_RUSTFLAGS='-C link-arg=-Wl,-melf32ltsmip'" >> $GITHUB_ENV

      - name: Cache cargo dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Build with custom flags
        run: |
          source $HOME/.cargo/env
          cargo build --target mipsel-unknown-linux-musl --release

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: dysk-mipsle
          path: target/mipsel-unknown-linux-musl/release/dysk

      - name: Debug on failure
        if: failure()
        run: |
          rustup show
          rustup target list | grep mipsel
          which mipsel-linux-gnu-gcc || true
          mipsel-linux-gnu-gcc --version || true
          find /usr -name '*mipsel*' 2>/dev/null
          df -h
          cargo tree
